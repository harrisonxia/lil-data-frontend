{"version":3,"sources":["main.module.css","pieChart.jsx","nav.jsx","App.js","serviceWorker.js","index.js","component.module.css"],"names":["module","exports","main","mainContainer","pageHeader","pageDescription","summaryRow","title","stupidFont","charts","sidenav","dataPieChart","genre","total_counts","label","data","bgColor","hoverBgColor","_i","length","col","push","randomColor","console","log","Example","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","react_default","a","createElement","reactstrap_es","color","light","expand","href","onClick","navbar","className","tag","NavLink","to","process","Link","nav","inNavbar","caret","right","divider","React","Component","MainMenu","Home","About","Code","Contact","App","BrowserRouter","nav_Example","Route","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","headBar","text"],"mappings":"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","file":"static/js/main.39c3d010.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"main_main__2IPyd\",\"mainContainer\":\"main_mainContainer__Pxine\",\"pageHeader\":\"main_pageHeader__ttSQH\",\"pageDescription\":\"main_pageDescription__3PWXP\",\"summaryRow\":\"main_summaryRow__KEqYW\",\"title\":\"main_title__qq1Kw\",\"stupidFont\":\"main_stupidFont__1lm_D\",\"charts\":\"main_charts__3U2TS\",\"sidenav\":\"main_sidenav__3nMYl\"};","import * as React from 'react'\nimport styles from './main.module.css'\nimport HeadBar from './head-bar.jsx'\n// import {\n//     PieChart,\n//     Pie,\n// } from 'recharts'\nimport {Doughnut} from 'react-chartjs-2'\nimport randomColor from 'randomcolor'\n\nconst dataPieChart = [\n    {\"genre\":\"Shooter\",\"total_counts\":2249537},\n    {\"genre\":\"First-Person Shooter\",\"total_counts\":1033161},\n    {\"genre\":\"Action\",\"total_counts\":603394},\n    {\"genre\":\"MOBA\",\"total_counts\":439132},\n    {\"genre\":\"Action-Adventure\",\"total_counts\":427543},\n    {\"genre\":\"Role-Playing\",\"total_counts\":383732},\n    {\"genre\":\"MMORPG\",\"total_counts\":256919},\n    {\"genre\":\"Simulation\",\"total_counts\":217854},\n    {\"genre\":\"Driving/Racing\",\"total_counts\":163476},\n    {\"genre\":\"Soccer\",\"total_counts\":135251},\n    {\"genre\":\"Strategy\",\"total_counts\":121246},\n    {\"genre\":\"Platformer\",\"total_counts\":99666},\n    {\"genre\":\"Adventure\",\"total_counts\":98679},\n    {\"genre\":\"Vehicular Combat\",\"total_counts\":90747},\n    {\"genre\":\"Card Game\",\"total_counts\":81960},\n    {\"genre\":\"Fighting\",\"total_counts\":62098},\n    {\"genre\":\"Music/Rhythm\",\"total_counts\":57808},\n    {\"genre\":\"Basketball\",\"total_counts\":57372},\n    {\"genre\":\"Compilation\",\"total_counts\":50372},\n    {\"genre\":\"Football\",\"total_counts\":44449}\n]\n\nlet label=[], data = [], bgColor = [], hoverBgColor = []\nfor (let col of dataPieChart) {\n    label.push(col.genre)\n    data.push(col.total_counts)\n    bgColor.push(randomColor())\n    hoverBgColor.push(randomColor())\n}\n\nconsole.log(label)\nconsole.log(data)\nconsole.log(randomColor())\nconst dataCollection = {\n    labels: label,\n    datasets: [{\n        data: data,\n        backgroundColor: bgColor,\n        hoverBackgroundColor: hoverBgColor,\n    }]\n}\n\nconst PieCharts = () => {\n    // <PieChart width={500} height={250}>\n    //     <Pie data={dataPieChart} dataKey=\"total_counts\"\n    //          nameKey=\"genre\" cx=\"85%\" cy=\"85%\" fill=\"#8884d8\" label={true}\n    //          legendType='square' isAnimationActive={true}}\n    //     />\n    // </PieChart>\n    return (\n        <div>\n\n            <Doughnut data={dataCollection} height={450} width={450}/>\n\n        </div>\n    )\n}\n\nexport default PieCharts\n","import React from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem } from 'reactstrap';\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom'\nimport Charts from './charts'\n\nexport default class Example extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            isOpen: false\n        };\n    }\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n    render() {\n        return (\n            <div>\n                <Navbar color=\"light\" light expand=\"md\">\n                    <NavbarBrand href=\"/\">Lil Data</NavbarBrand>\n                    <NavbarToggler onClick={this.toggle} />\n                    <Collapse isOpen={this.state.isOpen} navbar>\n                        <Nav className=\"ml-auto\" navbar>\n                            <NavItem>\n                                <NavLink href=\"/lil-data-frontend/charts/\">Components</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink tag={NavLink} to={process.env.PUBLIC_URL+\"/charts\"}>Charts</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <Link to={process.env.PUBLIC_URL+\"/charts\"}>Another Site</Link>\n                            </NavItem>\n                            <UncontrolledDropdown nav inNavbar>\n                                <DropdownToggle nav caret>\n                                    Options\n                                </DropdownToggle>\n                                <DropdownMenu right>\n                                    <DropdownItem>\n                                        Option 1\n                                    </DropdownItem>\n                                    <DropdownItem>\n                                        Option 2\n                                    </DropdownItem>\n                                    <DropdownItem divider />\n                                    <DropdownItem>\n                                        Reset\n                                    </DropdownItem>\n                                </DropdownMenu>\n                            </UncontrolledDropdown>\n                        </Nav>\n                    </Collapse>\n                </Navbar>\n            </div>\n        );\n    }\n}","import React, {Component} from 'react'\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom'\nimport Main from './main.jsx'\nimport NavBar from './nav.jsx'\nimport Charts from './charts.jsx'\nconst MainMenu = () => {\n    return (<div>\n        <Link to=\"/\">\n            <button>home</button>\n        </Link>\n        <Link to=\"/about\">\n            <button>About</button>\n        </Link>\n        <Link to=\"/code\">\n            <button>code</button>\n        </Link>\n        <Link to=\"/code\">\n            <button>contact</button>\n        </Link>\n        <Link to=\"/info\">\n            <button>info</button>\n        </Link>\n    </div>)\n}\n\n\nconst Home = () => (\n    <div>\n        Home\n    </div>\n)\n\n\nconst About = () => (\n    <div>\n        About\n    </div>\n)\n\nconst Code = () => (\n    <div>\n        Code\n    </div>\n)\n\nconst Contact = () => (\n    <div>\n        Contact\n    </div>\n)\nconst info = () => (\n    <div>\n        info\n    </div>\n)\n\nclass App extends Component {\n    render() {\n        console.log('process.env.PUBLIC_URL' + process.env.PUBLIC_URL)\n\n        return (\n\n            <Router>\n                <div className=\"App\">\n                    <header className=\"App-header\">\n                        {/*<MainMenu/>*/}\n                        {/*<div>*/}\n                        <NavBar/>\n\n                        {/*<Route exact path=\"/\" component={Home} />*/}\n                        {/*<Route exact path=\"/about\" component={About} />*/}\n                        {/*<Route exact path=\"/code\" component={Code} />*/}\n                        {/*<Route exact path=\"/contact\" component={Contact} />*/}\n                        {/*<Route exact path=\"/presence\" component={info} />*/}\n                        {/*</div>*/}\n\n                        {/*<Route path={process.env.PUBLIC_URL+\"/\"} component={Main}/>*/}\n                        {/*<Route path={process.env.PUBLIC_URL+\"/charts\"} component={Charts}/>*/}\n                        {/*<Link to={process.env.PUBLIC_URL+\"/\"}/>*/}\n                        {/*<Link to={process.env.PUBLIC_URL+\"/charts\"}/>*/}\n                    </header>\n                    {/*<Main/>*/}\n                    <div>\n                        {/*<Link to={process.env.PUBLIC_URL+\"/\"}/>*/}\n                        {/*/!*<Link to={process.env.PUBLIC_URL+\"/charts\"}/>*!/*/}\n\n                        <Route path={process.env.PUBLIC_URL+\"/\"} component={MainMenu}/>\n                        <Route exact path=\"/\" component={Home} />\n                        <Route exact path=\"/about\" component={About} />\n                        <Route exact path=\"/code\" component={Code} />\n                        <Route exact path=\"/contact\" component={Contact} />\n                        {/*<Route exact path=\"/presence\" component={Presence} />*/}\n                        {/*<Route path={process.env.PUBLIC_URL + '/charts'} component={Charts}/>*/}\n                    </div>\n\n                </div>\n            </Router>\n        )\n    }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"component_title__JdM25\",\"headBar\":\"component_headBar__39HV0\",\"text\":\"component_text__2BOk7\"};"],"sourceRoot":""}