{"version":3,"sources":["main.module.css","pieChart.jsx","head-bar.jsx","nav.jsx","main.jsx","charts.jsx","App.js","serviceWorker.js","index.js","component.module.css"],"names":["module","exports","main","mainContainer","pageHeader","pageDescription","summaryRow","title","stupidFont","charts","sidenav","HeadBar","props","text","react","className","componentStyle","headBar","name","dataPieChart","genre","total_counts","label","data","bgColor","hoverBgColor","_i","length","col","push","randomColor","console","log","dataCollection","labels","datasets","backgroundColor","hoverBackgroundColor","PieCharts","es","height","width","Example","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","react_default","a","createElement","reactstrap_es","color","light","expand","href","onClick","navbar","nav","inNavbar","caret","right","divider","React","Component","Main","styles","head_bar","pieChart","dataTreeMap","children","size","dataLineChart","game1","game2","game3","dataRadarChart","subject","A","B","fullMark","Treemap","dataKey","ratio","stroke","fill","LineChart","margin","top","left","bottom","XAxis","YAxis","CartesianGrid","strokeDasharray","Tooltip","Legend","Line","type","activeDot","r","RadarChart","cx","cy","outerRadius","PolarGrid","PolarAngleAxis","PolarRadiusAxis","Radar","fillOpacity","App","BrowserRouter","basename","nav_Example","Route","exact","path","component","Charts","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.03fb3132.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"main_main__2IPyd\",\"mainContainer\":\"main_mainContainer__Pxine\",\"pageHeader\":\"main_pageHeader__ttSQH\",\"pageDescription\":\"main_pageDescription__3PWXP\",\"summaryRow\":\"main_summaryRow__KEqYW\",\"title\":\"main_title__qq1Kw\",\"stupidFont\":\"main_stupidFont__1lm_D\",\"charts\":\"main_charts__3U2TS\",\"sidenav\":\"main_sidenav__3nMYl\"};","import * as React from 'react'\nimport styles from './main.module.css'\nimport HeadBar from './head-bar.jsx'\n// import {\n//     PieChart,\n//     Pie,\n// } from 'recharts'\nimport {Doughnut} from 'react-chartjs-2'\nimport randomColor from 'randomcolor'\n\nconst dataPieChart = [\n    {\"genre\":\"Shooter\",\"total_counts\":2249537},\n    {\"genre\":\"First-Person Shooter\",\"total_counts\":1033161},\n    {\"genre\":\"Action\",\"total_counts\":603394},\n    {\"genre\":\"MOBA\",\"total_counts\":439132},\n    {\"genre\":\"Action-Adventure\",\"total_counts\":427543},\n    {\"genre\":\"Role-Playing\",\"total_counts\":383732},\n    {\"genre\":\"MMORPG\",\"total_counts\":256919},\n    {\"genre\":\"Simulation\",\"total_counts\":217854},\n    {\"genre\":\"Driving/Racing\",\"total_counts\":163476},\n    {\"genre\":\"Soccer\",\"total_counts\":135251},\n    {\"genre\":\"Strategy\",\"total_counts\":121246},\n    {\"genre\":\"Platformer\",\"total_counts\":99666},\n    {\"genre\":\"Adventure\",\"total_counts\":98679},\n    {\"genre\":\"Vehicular Combat\",\"total_counts\":90747},\n    {\"genre\":\"Card Game\",\"total_counts\":81960},\n    {\"genre\":\"Fighting\",\"total_counts\":62098},\n    {\"genre\":\"Music/Rhythm\",\"total_counts\":57808},\n    {\"genre\":\"Basketball\",\"total_counts\":57372},\n    {\"genre\":\"Compilation\",\"total_counts\":50372},\n    {\"genre\":\"Football\",\"total_counts\":44449}\n]\n\nlet label=[], data = [], bgColor = [], hoverBgColor = []\nfor (let col of dataPieChart) {\n    label.push(col.genre)\n    data.push(col.total_counts)\n    bgColor.push(randomColor())\n    hoverBgColor.push(randomColor())\n}\n\nconsole.log(label)\nconsole.log(data)\nconsole.log(randomColor())\nconst dataCollection = {\n    labels: label,\n    datasets: [{\n        data: data,\n        backgroundColor: bgColor,\n        hoverBackgroundColor: hoverBgColor,\n    }]\n}\n\nconst PieCharts = () => {\n    // <PieChart width={500} height={250}>\n    //     <Pie data={dataPieChart} dataKey=\"total_counts\"\n    //          nameKey=\"genre\" cx=\"85%\" cy=\"85%\" fill=\"#8884d8\" label={true}\n    //          legendType='square' isAnimationActive={true}}\n    //     />\n    // </PieChart>\n    return (\n        <div>\n\n            <Doughnut data={dataCollection} height={450} width={450}/>\n\n        </div>\n    )\n}\n\nexport default PieCharts\n","// @flow\nimport * as React from 'react'\nimport componentStyle from './component.module.css'\n\ntype Props = {\n    name: string,\n    text?: string,\n}\n\nconst HeadBar = (props: Props) => {\n    if (props.text) {\n        return (\n            <div className={componentStyle.headBar}>\n                <div className={componentStyle.title}>{props.name}</div>\n                <div className={componentStyle.text}>{props.text}</div>\n            </div>\n        )\n    } else {\n        return (\n            <div className={componentStyle.headBar}>\n                <div className={componentStyle.title}>{props.name}</div>\n            </div>\n        )\n    }\n\n}\n\nexport default HeadBar\n","import React from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem } from 'reactstrap';\n\nexport default class Example extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            isOpen: false\n        };\n    }\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n    render() {\n        return (\n            <div>\n                <Navbar color=\"light\" light expand=\"md\">\n                    <NavbarBrand href=\"/\">reactstrap</NavbarBrand>\n                    <NavbarToggler onClick={this.toggle} />\n                    <Collapse isOpen={this.state.isOpen} navbar>\n                        <Nav className=\"ml-auto\" navbar>\n                            <NavItem>\n                                <NavLink href=\"/lil-data-frontend/charts/\">Components</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink href=\"https://github.com/reactstrap/reactstrap\">GitHub</NavLink>\n                            </NavItem>\n                            <UncontrolledDropdown nav inNavbar>\n                                <DropdownToggle nav caret>\n                                    Options\n                                </DropdownToggle>\n                                <DropdownMenu right>\n                                    <DropdownItem>\n                                        Option 1\n                                    </DropdownItem>\n                                    <DropdownItem>\n                                        Option 2\n                                    </DropdownItem>\n                                    <DropdownItem divider />\n                                    <DropdownItem>\n                                        Reset\n                                    </DropdownItem>\n                                </DropdownMenu>\n                            </UncontrolledDropdown>\n                        </Nav>\n                    </Collapse>\n                </Navbar>\n            </div>\n        );\n    }\n}","// @flow\nimport * as React from 'react'\nimport styles from './main.module.css'\nimport HeadBar from './head-bar.jsx'\nimport {\n    Treemap,\n    LineChart,\n    Line,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    Radar,\n    RadarChart,\n    PolarGrid,\n    PolarAngleAxis,\n    PolarRadiusAxis,\n} from 'recharts'\nimport PieCharts from './pieChart.jsx'\nimport NavBar from './nav'\n\nconst dataTreeMap = [\n    {\n        name: 'CategoryA',\n        children: [\n            { name: 'AA', size: 1302 },\n            { name: 'AB', size: 555 },\n        ],\n    },\n    {\n        name: 'CategoryB',\n        children: [\n            { name: 'BA', size: 2138 },\n            { name: 'BB', size: 333 },\n            { name: 'BC', size: 666 },\n        ],\n    },\n]\n\nconst dataLineChart = [\n    {name: '8:30', game1: 4000, game2: 2400, game3: 2400},\n    {name: '9:00', game1: 3000, game2: 1398, game3: 2210},\n    {name: '9:30', game1: 2000, game2: 9800, game3: 2290},\n    {name: '10:00', game1: 2780, game2: 3908, game3: 2000},\n]\n\nconst dataRadarChart = [\n    { subject: 'CategoryA', A: 120, B: 110, fullMark: 150 },\n    { subject: 'CategoryB', A: 98, B: 130, fullMark: 150 },\n    { subject: 'CategoryC', A: 86, B: 130, fullMark: 150 },\n    { subject: 'CategoryD', A: 99, B: 100, fullMark: 150 },\n    { subject: 'CategoryE', A: 85, B: 90, fullMark: 150 },\n]\n\nconst Main = () => {\n    let name = 'Lil Data'\n    let text = 'Gaming Trend Analysis from 2015 to 2018'\n    return (\n        <main className={styles.main}>\n            <HeadBar name={name} text={text}/>\n            {/*<div className={styles.sidenav}>*/}\n                {/*<a href=\"#\">About</a>*/}\n                {/*<a href=\"#\">Services</a>*/}\n                {/*<a href=\"#\">Clients</a>*/}\n                {/*<a href=\"#\">Contact</a>*/}\n            {/*</div>*/}\n            <div className={styles.mainContainer}>\n                <div className={styles.title}>Lil data</div>\n\n                <div>\n                    <span className={styles.pageHeader}>Hello World</span>\n                    <br/>\n                    <span className={styles.pageDescription}>\n                        My Code\n                        <br/>\n                        <span className={styles.stupidFont}>actually works.</span>\n                    </span>\n                    <PieCharts/>\n                </div>\n\n                {/*<Treemap*/}\n                {/*width={730}*/}\n                {/*height={250}*/}\n                {/*data={dataTreeMap}*/}\n                {/*dataKey=\"size\"*/}\n                {/*ratio={4 / 3}*/}\n                {/*stroke=\"#fff\"*/}\n                {/*fill=\"#8884d8\"*/}\n                {/*/>*/}\n                {/*<hr/>*/}\n                {/*<LineChart width={600} height={300} data={dataLineChart}*/}\n                {/*margin={{top: 5, right: 30, left: 20, bottom: 5}}>*/}\n                {/*<XAxis dataKey=\"name\"/>*/}\n                {/*<YAxis/>*/}\n                {/*<CartesianGrid strokeDasharray=\"3 3\"/>*/}\n                {/*<Tooltip/>*/}\n                {/*<Legend />*/}\n                {/*<Line type=\"monotone\" dataKey=\"game1\" stroke=\"#8884d8\" activeDot={{r: 8}}/>*/}\n                {/*<Line type=\"monotone\" dataKey=\"game2\" stroke=\"#82ca9d\" />*/}\n                {/*<Line type=\"monotone\" dataKey=\"game3\" stroke=\"#83dd9d\" />*/}\n                {/*</LineChart>*/}\n\n                {/*<hr/>*/}\n                {/*<div>*/}\n                {/*<a id='kkk'>Radar Chart</a>*/}\n                {/*<RadarChart cx={300} cy={250} outerRadius={150} width={600} height={500} data={dataRadarChart}>*/}\n                {/*<PolarGrid />*/}\n                {/*<PolarAngleAxis dataKey=\"subject\" />*/}\n                {/*<PolarRadiusAxis/>*/}\n                {/*<Radar name=\"Mike\" dataKey=\"A\" stroke=\"#8884d8\" fill=\"#8884d8\" fillOpacity={0.6}/>*/}\n                {/*</RadarChart>*/}\n                {/*</div>*/}\n                {/*<hr/>*/}\n\n            </div>\n\n\n        </main>\n    )\n}\n\nexport default Main\n","// @flow\nimport * as React from 'react'\nimport styles from './main.module.css'\nimport HeadBar from './head-bar.jsx'\nimport {\n    Treemap,\n    LineChart,\n    Line,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    Radar,\n    RadarChart,\n    PolarGrid,\n    PolarAngleAxis,\n    PolarRadiusAxis,\n} from 'recharts'\n\nconst dataTreeMap = [\n    {\n        name: 'CategoryA',\n        children: [\n            { name: 'AA', size: 1302 },\n            { name: 'AB', size: 555 },\n        ],\n    },\n    {\n        name: 'CategoryB',\n        children: [\n            { name: 'BA', size: 2138 },\n            { name: 'BB', size: 333 },\n            { name: 'BC', size: 666 },\n        ],\n    },\n]\n\nconst dataLineChart = [\n    {name: '8:30', game1: 4000, game2: 2400, game3: 2400},\n    {name: '9:00', game1: 3000, game2: 1398, game3: 2210},\n    {name: '9:30', game1: 2000, game2: 9800, game3: 2290},\n    {name: '10:00', game1: 2780, game2: 3908, game3: 2000},\n]\n\nconst dataRadarChart = [\n    { subject: 'CategoryA', A: 120, B: 110, fullMark: 150 },\n    { subject: 'CategoryB', A: 98, B: 130, fullMark: 150 },\n    { subject: 'CategoryC', A: 86, B: 130, fullMark: 150 },\n    { subject: 'CategoryD', A: 99, B: 100, fullMark: 150 },\n    { subject: 'CategoryE', A: 85, B: 90, fullMark: 150 },\n];\nconst COLORS = ['#8889DD', '#9597E4', '#8DC77B', '#A5D297', '#E2CF45', '#F8C12D']\n\nconst Main = () => {\n    let name = 'Lil Data'\n    let text = 'Gaming Trend Analysis from 2015 to 2018'\n    return (\n        <main className={styles.main}>\n\n            <HeadBar name={name} text={text}/>\n\n            <div className={styles.charts}>\n                {/* <h2>This is a <s>doughnut</s> donut chart</h2> */}\n            </div>\n            <div className={styles.mainContainer}>\n                <Treemap\n                    width={730}\n                    height={250}\n                    data={dataTreeMap}\n                    dataKey=\"size\"\n                    ratio={4 / 3}\n                    stroke=\"#fff\"\n                    fill=\"#8884d8\"\n                />\n                <hr/>\n                <LineChart width={600} height={300} data={dataLineChart}\n                           margin={{top: 5, right: 30, left: 20, bottom: 5}}>\n                    <XAxis dataKey=\"name\"/>\n                    <YAxis/>\n                    <CartesianGrid strokeDasharray=\"3 3\"/>\n                    <Tooltip/>\n                    <Legend />\n                    <Line type=\"monotone\" dataKey=\"game1\" stroke=\"#8884d8\" activeDot={{r: 8}}/>\n                    <Line type=\"monotone\" dataKey=\"game2\" stroke=\"#82ca9d\" />\n                    <Line type=\"monotone\" dataKey=\"game3\" stroke=\"#83dd9d\" />\n                </LineChart>\n\n                <hr/>\n                <RadarChart cx={300} cy={250} outerRadius={150} width={600} height={500} data={dataRadarChart}>\n                    <PolarGrid />\n                    <PolarAngleAxis dataKey=\"subject\" />\n                    <PolarRadiusAxis/>\n                    <Radar name=\"Mike\" dataKey=\"A\" stroke=\"#8884d8\" fill=\"#8884d8\" fillOpacity={0.6}/>\n                </RadarChart>\n            </div>\n        </main>\n    )\n}\n\nexport default Main\n","import React, {Component} from 'react'\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom'\nimport Main from './main.jsx'\nimport NavBar from './nav.jsx'\nimport Charts from './charts.jsx'\n// const MainMenu = () => {\n//     return (<div>\n//         <Link to=\"/\">\n//             <button>home</button>\n//         </Link>\n//         <Link to=\"/about\">\n//             <button>About</button>\n//         </Link>\n//         <Link to=\"/code\">\n//             <button>code</button>\n//         </Link>\n//         <Link to=\"/code\">\n//             <button>contact</button>\n//         </Link>\n//         <Link to=\"/info\">\n//             <button>info</button>\n//         </Link>\n//     </div>)\n// }\n//\n//\n// const Home = () => (\n//     <div>\n//         Home\n//     </div>\n// )\n//\n//\n// const About = () => (\n//     <div>\n//         About\n//     </div>\n// )\n//\n// const Code = () => (\n//     <div>\n//         Code\n//     </div>\n// )\n//\n// const Contact = () => (\n//     <div>\n//         Contact\n//     </div>\n// )\n// const info = () => (\n//     <div>\n//         info\n//     </div>\n// )\n\nclass App extends Component {\n    render() {\n        return (\n\n            <Router basename='lil-data-frontend'>\n                <div className=\"App\">\n                    <header className=\"App-header\">\n                        {/*<MainMenu/>*/}\n                        {/*<div>*/}\n                        <NavBar/>\n\n                            {/*<Route exact path=\"/\" component={Home} />*/}\n                            {/*<Route exact path=\"/about\" component={About} />*/}\n                            {/*<Route exact path=\"/code\" component={Code} />*/}\n                            {/*<Route exact path=\"/contact\" component={Contact} />*/}\n                            {/*<Route exact path=\"/presence\" component={info} />*/}\n                        {/*</div>*/}\n\n                        <Route exact path=\"/\" component={Main}/>\n                        <Route exact path=\"/charts\" component={Charts}/>\n\n                    </header>\n                    {/*<Main/>*/}\n\n                </div>\n            </Router>\n        )\n    }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"component_title__JdM25\",\"headBar\":\"component_headBar__39HV0\",\"text\":\"component_text__2BOk7\"};"],"sourceRoot":""}